{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","userDelete","userUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","resonse","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","createProduct","post","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","disabled","length","review","createdAt","substring","productId","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","eamil","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","successPay","loadingDeliver","successDeliver","href","isDelivered","deliveredAt","deliverOrder","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2c5d861.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { \r\n    productListReducer, \r\n    productDetailsReducer, \r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n    userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer, \r\n    userUpdateProfileReducer, \r\n    userListReducer, \r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n } from './reducers/userReducers'\r\nimport { \r\n    orderCreateReducer, \r\n    orderDetailsReducer, \r\n    orderPayReducer, \r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n})\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n        JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n        JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload.products, page: action.payload.page, pages: action.payload.pages }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews:[]} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {}}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return {product: {}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: []}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: []}\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS,\r\n } from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems:state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = {users: []}, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return {users:[]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = {user:{}}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n } from '../constants/orderConstants'\r\n\r\n\r\n export const orderCreateReducer = (state={}, action) =>{\r\n    switch (action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n }\r\n\r\n export const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = {orders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListReducer = (state = {orders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import axios from 'axios'\r\nimport { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n\r\nexport const login = (eamil, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': eamil, 'password': password },\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.resonse && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET})\r\n    dispatch({ type: USER_LIST_RESET})\r\n}\r\n\r\nexport const register = (name, eamil, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': eamil, 'password': password },\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.resonse && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.resonse && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.resonse && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.resonse && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.resonse && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.resonse && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Elijah Shop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Elijah Shop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                    ? 'fas fa-star'\r\n                    : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                    ? 'fas fa-star'\r\n                    : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                    ? 'fas fa-star'\r\n                    : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                    ? 'fas fa-star'\r\n                    : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                    ? 'fas fa-star'\r\n                    : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>{ text && text }</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>    \r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n                    </div>\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height:'100px',\r\n                width:'100px',\r\n                margin:'auto',\r\n                display:'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST})\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.resonse && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST})\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.resonse && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST})\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.resonse && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import React, { useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n    }, [dispatch, keyword])\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            <h1>Latest Products</h1>\r\n            {\r\n                loading ? <Loader />\r\n                            : error ? <Message variant='danger'>{error}</Message>\r\n                                :\r\n                                <div>\r\n                                    <Row>\r\n                                        {products.map(product => (\r\n                                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                                <Product product={product} />\r\n                                            </Col>\r\n                                        ))}\r\n                                    </Row>\r\n                                    <Paginate page={page} pages={pages} keyword={keyword} />\r\n                                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history}) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { loading:loadingProductReview, error:errorProductReview, success:successProductReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className=\"btn btn-light my-3\">Go Back</Link>\r\n            {\r\n                loading ?\r\n                    <Loader />\r\n                    : error\r\n                        ? <Message variant='danger'>{error}</Message>\r\n                        : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Card>\r\n                                        <ListGroup variant=\"flush\">\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n                                                                    [...Array(product.countInStock).keys()].map((x) =>(\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )\r\n                                            }\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block' \r\n                                                    type='button' \r\n                                                    disabled={product.countInStock < 1}>\r\n                                                        Add to Cart\r\n                                                    </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history}) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            {cartItems.length === 0 ? (\r\n                <Message variant='info'>\r\n                    Your Cart is empty <Link to='/'>Go Back</Link>\r\n                </Message>\r\n            ) : (\r\n                <ListGroup variant='flush'>\r\n                    {cartItems.map(item => (\r\n                        <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    ${item.price}\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        value={item.qty}\r\n                                        onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                    >\r\n                                        {\r\n                                            [...Array(item.countInStock).keys()].map((x) =>(\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Col md={1}>\r\n                                    <Button\r\n                                        type='button'\r\n                                        variant='light'\r\n                                        onClick={() => removeFromCartHandler(item.product)}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n            )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? \r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }else{\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an account? \r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign in\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col,Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }else{\r\n            if(!user || !user.name || success || userInfo._id !== user._id){\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }else{\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Info</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n        localStorage.removeItem('cartItems')\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.resonse && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ?  (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ?  (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ?  (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ?  (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history}) {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const[paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = (Number(0.082) * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET})\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment</h2>\r\n                            <p>\r\n                                <strong>Payment: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Item: </Col>\r\n                                <Col>${cart.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping: </Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax: </Col>\r\n                                <Col>${cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total: </Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cart.cartItems === 0}\r\n                                onClick={placeOrder}\r\n                            >\r\n                                Place Order\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        if(!order || successPay || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = () => {\r\n        dispatch(payOrder(orderId))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader/>\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment</h2>\r\n                            <p>\r\n                                <strong>Payment: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Order is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Item: </Col>\r\n                                <Col>${order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping: </Col>\r\n                                <Col>${order.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax: </Col>\r\n                                <Col>${order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total: </Col>\r\n                                <Col>${order.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <Button\r\n                                    variant='success'\r\n                                    className='btn-block'\r\n                                    onClick={successPaymentHandler}\r\n                                >Pay</Button>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    {loadingDeliver && <Loader/>}\r\n                    {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn btn-block'\r\n                                onClick={deliverHandler}\r\n                            >\r\n                                Mark as Delivered\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm(\"Are you sure?\")){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading ? (<Loader/>)\r\n            : error \r\n            ? (<Message variant='danger'>{error}</Message>) \r\n            : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.isAdmin ? (\r\n                                    <i className='fas fa-check' style={{color: 'green'}}></i>\r\n                                ) : (\r\n                                    <i className='fas fa-check' style={{color: 'red'}}></i>\r\n                                )}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n    const userId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if(!user.name || user._id !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='isadmin'>\r\n                        <Form.Check\r\n                            type='checkbox'\r\n                            label='Is Admin'\r\n                            checked={isAdmin}\r\n                            onChange={(e) => setIsAdmin(e.target.checked)}\r\n                        >\r\n                        </Form.Check>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n                )}\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading:loadingDelete, error:errorDelete, success:successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET})\r\n        if(!userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n        if(successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }else{\r\n            dispatch(listProducts(keyword))\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createProduct, keyword])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm(\"Are you sure?\")){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-tems-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader/>}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading ? (<Loader/>)\r\n            : error \r\n            ? (<Message variant='danger'>{error}</Message>) \r\n            : (\r\n                <div>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate page={page} pages={pages} isAdmin={true} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n    const productId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error:errorUpdate, loading:loadingUpdate, success:successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        }else{\r\n            if(!product.name || product._id !== Number(productId)){\r\n                dispatch(listProductDetails(productId))\r\n            }else{\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n        setUploading(true)\r\n        try{\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n            setImage(data)\r\n            setUploading(false)\r\n        }catch(error){\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control\r\n                            type='number'\r\n                            placeholder='Enter Price'\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='image'>\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter image'\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                        <Form.File\r\n                            id='image-file'\r\n                            label='Choose File'\r\n                            onChange={uploadFileHandler}\r\n                        >\r\n                        </Form.File>\r\n                        {uploading && <Loader/>}\r\n                    </Form.Group>\r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter brand'\r\n                            value={brand}\r\n                            onChange={(e) => setBrand(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='countinstock'>\r\n                        <Form.Label>Stock</Form.Label>\r\n                        <Form.Control\r\n                            type='number'\r\n                            placeholder='Enter stock'\r\n                            value={countInStock}\r\n                            onChange={(e) => setCountInStock(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='category'>\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter category'\r\n                            value={category}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='description'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter description'\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n                )}\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading ? (<Loader/>)\r\n            : error \r\n            ? (<Message variant='danger'>{error}</Message>) \r\n            : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? (\r\n                                    order.paidAt.substring(0, 10)\r\n                                ) : (\r\n                                    <i className='fas fa-check' style={{color: 'red'}}></i>\r\n                                )}\r\n                                </td>\r\n                                <td>{order.isDelivered ? (\r\n                                    order.deliveredAt.substring(0, 10)\r\n                                ) : (\r\n                                    <i className='fas fa-check' style={{color: 'red'}}></i>\r\n                                )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}/`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n        <main className=\"py-3\">\n          <Container>\n            <Route path='/' component={HomeScreen} exact />\n            <Route path='/login' component={LoginScreen} />\n            <Route path='/register' component={RegisterScreen} />\n            <Route path='/profile' component={ProfileScreen} />\n            <Route path='/shipping' component={ShippingScreen} />\n            <Route path='/payment' component={PaymentScreen} />\n            <Route path='/placeorder' component={PlaceOrderScreen} />\n            <Route path='/order/:id' component={OrderScreen} />\n            <Route path='/product/:id' component={ProductScreen} />\n            <Route path='/cart/:id?' component={CartScreen} />\n            <Route path='/admin/userlist' component={UserListScreen} />\n            <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n            <Route path='/admin/productlist' component={ProductListScreen} />\n            <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n            <Route path='/admin/orderlist' component={OrderListScreen} />\n          </Container>\n        </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}